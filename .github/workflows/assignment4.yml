name: assignmnt4
on:
  workflow_dispatch
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # stocks image
    - name: Build and export stocks image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./dockerfile.stocks
        tags: stocks-srv:latest
        output: type=docker,dest=/tmp/stocks-image.tar

    # capital-gains image
    - name: Build and export capital-gains image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./dockerfile.capital
        tags: cg-srv:latest
        output: type=docker,dest=/tmp/cg-image.tar

    # upload the built images for use in the test job
    - name: Upload images
      uses: actions/upload-artifact@v4
      with:
        name: docker-images
        path: | 
          /tmp/stocks-image.tar
          /tmp/cg-image.tar
      
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:

    # download the images built in the build job
    - name: Download images
      uses: actions/download-artifact@v4 # download all artifacts that were uploaded

    # load the images into the docker daemon
    - name: Load images
      run: |
        docker load < /tmp/stocks-image.tar
        docker load < /tmp/cg-image.tar

    # check images are loaded
    - name: Check images
      run: docker image ls

    # start the services
    - name: Start services
      run: docker-compose up -d

    # check the services are running
    - name: Check services
      run: docker ps

    - name: Checkout
      uses: actions/checkout@v4
      
    # set up a python environment
    - name: Set up python
      uses: actions/setup-python@v5

    # install pip, pytest, and requests
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install requests
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # run the tests
    - name: Run tests
      run: |
        cd tests
        pytest -v assn4_test.py > assn4_test_results.txt
      # continue-on-error: true # allow the next step to run even if tests fail

    # upload the test results
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: tests/assn4_test_results.txt

  query:
    needs: build
    runs-on: ubuntu-latest
    steps:

    # download the images built in the build job
    - name: Download images
      uses: actions/download-artifact@v4 # download all artifacts that were uploaded

    # load the images into the docker daemon
    - name: Load images
      run: |
        docker load < /tmp/stocks-image.tar
        docker load < /tmp/cg-image.tar

    # check images are loaded
    - name: Check images
      run: docker image ls

    # start the services
    - name: Start services
      run: docker-compose up -d

    # check the services are running
    - name: Check services
      run: docker ps

    - name: Checkout
      uses: actions/checkout@v4
      
    # set up a python environment
    - name: Set up python
      uses: actions/setup-python@v5

    # install pip, pytest, and requests
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install requests
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # run the querys file
    - name: Run querys
      run: python querys.py


      

          