name: assignmnt4
on:
  workflow_dispatch
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # init the log.txt file
    - name: Init log file
      run: |
        : > log.txt
        START_TIME=$(date -Iminutes)
        echo "${START_TIME}" > log.txt
        echo "Yuval Shpitzer" >> log.txt

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and export stocks image
      run: |
        set -e
        docker build -f ./dockerfile.stocks -t stocks-srv:latest .
        docker images  # Check if the image exists
        docker save stocks-srv:latest -o /tmp/stocks-image.tar || (echo "Failed to save stocks image" && exit 1)

    - name: Build and export capital-gains image
      run: |
        set -e
        docker build -f ./dockerfile.capital -t cg-srv:latest .
        docker images  # Check if the image exists
        docker save cg-srv:latest -o /tmp/cg-image.tar || (echo "Failed to save capital-gains image" && exit 1)

    - name: images status
      run: |
        ls -l /tmp
        if [ -f /tmp/stocks-image.tar ] && [ -f /tmp/cg-image.tar ]; then
          echo "image successfully built" >> log.txt
        else
          echo "image failed to build" >> log.txt
          exit 1
        fi

    # upload the built images and log.txt file for use in the next jobs
    - name: Upload images
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: stocks-and-cg-images
        path: |
          /tmp/stocks-image.tar
          /tmp/cg-image.tar

    - name: Upload log.txt-after-build
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: log-file-after-build-job
        path: log.txt
      
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    # download the artifacts from previous jobs
    - name: Download artifacts
      uses: actions/download-artifact@v4 # download all artifacts that were uploaded
      with:
        path: .

    - name: List all files after downloading artifacts
      run: |
        find . -type f

    # load the images into the docker daemon
    - name: Load images
      run: |
        docker load < stocks-and-cg-images/stocks-image.tar
        docker load < stocks-and-cg-images/cg-image.tar

    # check images are loaded
    - name: Check images
      run: docker image ls

    - name: install docker-compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: List files for debugging
      run: ls -la

    # start the services
    - name: Start services
      run: docker-compose up -d

    # - name: List all files after downloading artifacts
    #   run: |
    #     find . -type f
        
    - name: Check containers
      run: |
        CONT_COUNT=$(docker ps -q | wc -l)
        
        if [ "$CONT_COUNT" -eq 3 ]; then
          echo "Container up and running" >> log-file-after-build-job/log.txt
        else
          echo "Container failed to run" >> log-file-after-build-job/log.txt
          exit 1
        fi
      
    # set up a python environment
    - name: Set up python
      uses: actions/setup-python@v5

    # install pip, pytest, and requests
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install requests
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # run the tests
    - name: Run tests
      run: |
        cd tests
        pytest -v assn4_tests.py > assn4_test_results.txt || true

    - name: tests results
      run: |
        if grep -q "FAILED" ./tests/assn4_test_results.txt; then
          echo "tests failed" >> log-file-after-build-job/log.txt
          exit 1
        else
          echo "tests succeeded" >> log-file-after-build-job/log.txt
        fi

    - name: Upload final-log.txt
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: log.txt
        path: log-file-after-build-job/log.txt

    # upload the test results
    - name: Upload pytest results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: assn4_test_results.txt
        path: tests/assn4_test_results.txt


  query:
    needs: test
    runs-on: ubuntu-latest
    steps:

    # download the images built in the build job
    - name: Download images
      uses: actions/download-artifact@v4 # download all artifacts that were uploaded
      with:
        name: stocks-and-cg-images

    - name: List all files after downloading artifacts
      run: |
        find . -type f

    # load the images into the docker daemon
    - name: Load images
      run: |
        docker load < stocks-image.tar
        docker load < cg-image.tar

    # check images are loaded
    - name: Check images
      run: docker image ls

    - name: install docker-compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    # start the services
    - name: Start services
      run: docker-compose up -d

    # check the services are running
    - name: Check services
      run: docker ps

    - name: Checkout
      uses: actions/checkout@v4
      
    # set up a python environment
    - name: Set up python
      uses: actions/setup-python@v5

    # install pip, pytest, and requests
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install requests
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # run the querys file
    - name: Run querys
      run: python query_services.py

    # upload the query results (response.txt) as artifact
    - name: Upload response file
      uses: actions/upload-artifact@v4
      with:
        name: query response file
        path: response.txt    
